name: Data Pipeline

on:
  push:
    branches: 
      - main

  schedule:
    - cron: '0 * * * *' # Run every hour at the top of the hour

  workflow_dispatch:

jobs:
  get_bike_data:
    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev

      - name: Install DVC
        run: |
          pip install dvc

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"


      - name: Run script
        run: poetry run python ./src/data/fetch_bike_data.py

      - name: Commit changes
        run: |
          git add data/raw/
          git commit -m 'Github Actions Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

  merge_bike_data:
    needs: get_bike_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev

      - name: Install DVC
        run: |
          pip install dvc

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          git pull
          dvc pull

      - name: Run script
        run: poetry run python ./src/data/merge_bike_data.py

      - name: Commit changes
        run: |
          git add data/raw/
          git commit -m 'Github Actions Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

  get_weather_data:
    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev

      - name: Install DVC
        run: |
          pip install dvc

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"
          

      - name: Run script
        run: poetry run python ./src/data/fetch_weather_data.py

      - name: Commit changes
        run: |
          git add data/raw/
          git commit -m 'Github Actions Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

  process_data:
    needs:
      - merge_bike_data
      - get_weather_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev

      - name: Install DVC
        run: |
          pip install dvc

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          git pull
          dvc pull

      - name: Run scripts
        run: |
            poetry run python ./src/data/process_bike_data.py
            poetry run python ./src/data/process_weather_data.py

      - name: Check if data file has changed
        id: check_changes
        run: |
          git diff --quiet data/processed/bike_data.csv || echo "::set-output name=CHANGED::true"
          git diff --quiet data/processed/weather_data.csv || echo "::set-output name=CHANGED::true"
        shell: bash

      - name: Commit changes
        if: steps.check_changes.outputs.CHANGED == 'true'
        run: |
          git add data/raw/
          git commit -m 'Github Actions Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

  merge_processed_data:
    needs: process_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev

      - name: Install DVC
        run: |
          pip install dvc

      - name: Setup Dagshub
        run: |
          dvc remote modify origin --local access_key_id ${{ secrets.DAGSHUB_PASSWORD }}

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          git pull
          dvc pull

      - name: Run scripts
        run: poetry run python ./src/data/merge_processed_data.py

      - name: Commit changes
        run: |
          git add data/raw/
          git commit -m 'Github Actions Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}