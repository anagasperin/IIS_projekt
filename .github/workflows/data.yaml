name: Data Pipeline

on:
  push:
    branches: 
      - main

  schedule:
    - cron: '0 * * * *' # Run every hour at the top of the hour

  workflow_dispatch:

jobs:
  get_bike_data:
    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      # - name: Install DVC
      #   run: |
      #     pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Run script
        run: poetry run python ./src/data/fetch_bike_data.py

      - name: Add data
        run: |
          poetry run dvc add data

      - name: Commit changes
        run: |
          git add data.dvc
          git commit -m 'Github Actions Bot Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

      - name: Push to dvc
        run: |
          poetry run dvc push

      - name: Get commit SHA and store it
        id: sha_new
        run: |
          echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  get_weather_data:
    needs: get_bike_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - env:
        SHA_NEW: ${{ needs.get_bike_data.outputs.sha_new }}
        run: echo "$SHA_NEW"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.get_bike_data.outputs.sha_new }}
          fetch-depth: 0

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      # - name: Install DVC
      #   run: |
      #     pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Run script
        run: poetry run python ./src/data/fetch_weather_data.py

      - name: Add data
        run: |
          poetry run dvc add data

      - name: Commit changes
        run: |
          git add data.dvc
          git commit -m 'Github Actions Bot Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

      - name: Push to dvc
        run: |
          poetry run dvc push

      - name: Get commit SHA and store it
        id: sha_new
        run: |
          echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  merge_bike_data:
    needs: 
      - get_bike_data
      - get_weather_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      # - name: Install DVC
      #   run: |
      #     pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Run script
        run: poetry run python ./src/data/merge_bike_data.py

      - name: Add data
        run: |
          poetry run dvc add data

      - name: Commit changes
        run: |
          git add data.dvc
          git commit -m 'Github Actions Bot Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

      - name: Push to dvc
        run: |
          poetry run dvc push

      - name: Get commit SHA and store it
        id: sha_new
        run: |
          echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  process_data:
    needs:
      - merge_bike_data
      - get_weather_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      # - name: Install DVC
      #   run: |
      #     pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Run scripts
        run: |
            poetry run python ./src/data/process_bike_data.py
            poetry run python ./src/data/process_weather_data.py

      - name: Add data
        run: |
          poetry run dvc add data

      - name: Commit changes
        run: |
          git add data.dvc
          git commit -m 'Github Actions Bot Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

      - name: Push to dvc
        run: |
          poetry run dvc push

      - name: Get commit SHA and store it
        id: sha_new
        run: |
          echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  merge_processed_data:
    needs: process_data

    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      - name: Install DVC
        run: |
          pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Run scripts
        run: poetry run python ./src/data/merge_processed_data.py

      - name: Add data
        run: |
          poetry run dvc add data

      - name: Commit changes
        run: |
          git add data.dvc
          git commit -m 'Github Actions Bot Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

      - name: Push to dvc
        run: |
          poetry run dvc push

      - name: Get commit SHA and store it
        id: sha_new
        run: |
          echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

  stability:
    needs: merge_processed_data
    runs-on: ubuntu-latest

    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      # - name: Install DVC
      #   run: |
      #     pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin
      
      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Stability tests
        run: poetry run python src/data/data_stability.py

      - name: Get commit SHA and store it
        id: sha_new
        run: |
          echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  
  validation:
    needs: merge_processed_data

    runs-on: ubuntu-latest
    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      # - name: Install DVC
      #   run: |
      #     pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin

      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Validation tests
        run: poetry run python src/data/data_validation.py

      - name: Deploy DataDocs to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: "great_expectations/uncommitted/data_docs/local_site"
          production-deploy: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      - name: Get commit SHA and store it
        id: sha_new
        run: |
          echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  
  update_reference_data:
    needs: [stability, validation]

    runs-on: ubuntu-latest
    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      # - name: Install DVC
      #   run: |
      #     pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Reference data update
        run: poetry run python src/data/update_reference.py

      - name: Add data
        run: |
          poetry run dvc add data

      - name: Commit changes
        run: |
          git add data.dvc
          git commit -m 'Github Actions Bot Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

      - name: Push to dvc
        run: |
          poetry run dvc push

      - name: Get commit SHA and store it
        id: sha_new
        run: |
          echo "SHA_NEW=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  
  split_test_train:
    needs: update_reference_data
    runs-on: ubuntu-latest
    outputs:
      sha_new: ${{steps.sha_new.outputs.SHA_NEW}}
    
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Poetry
        run: pipx install poetry

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev --no-interaction

      # - name: Install DVC
      #   run: |
      #     pip install dvc==2.51.0

      - name: Setup Dagshub
        run: |
          poetry run dvc remote modify origin --local auth basic
          poetry run dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME_1 }}
          poetry run dvc remote modify origin --local password ${{ secrets.DAGSHUB_PASSWORD_1 }}
          poetry run dvc remote default origin

      - name: Setup git config
        run: |
          git config user.name "anagasperin"
          git config user.email "anagasperin99@gmail.com"

      - name: Pull changes
        run: |
          poetry run dvc pull -f

      - name: Train/test split
        run: poetry run python src/data/split_test_train.py

      - name: Add data
        run: |
          poetry run dvc add data

      - name: Commit changes
        run: |
          git add data.dvc
          git commit -m 'Github Actions Bot Commit data'

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN }}
          branch: ${{ github.ref }}

      - name: Push to dvc
        run: |
          poetry run dvc push

      # - name: Git & DVC
      #   run: |
      #     git checkout main
      #     poetry run dvc add data/train.csv
      #     poetry run dvc add data/test.csv
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     dvc push -r origin
          
      # - name: Push changes
      #   if: ${{ steps.split_test_train.outputs.sha_new != github.event.before }}
      #   run: |
      #     git push origin main